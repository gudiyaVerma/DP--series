#include <bits/stdc++.h> 
int func(int i , int j ,vector<vector<int>>&grid, vector<vector<int>>&dp){
    if( i ==0 && j ==0 )return grid[i][j];
    if(i<0 || j < 0 )return 1e9;
    if(dp[i][j]!=-1)return dp[i][j];
    int up = grid[i][j]+ func(i-1,j,grid);
    int left = grid[i][j]+ func(i , j-1,grid);
    return dp[i][j]=min(up , left);
        
}
int minSumPath(vector<vector<int>> &grid) {
    int n= grid.size();
    int m = grid[0].size();
    vector<vector<int>>dp(n, vector<int>(m,-1));
    return func(N-1, M-1, grid,dp);
}
